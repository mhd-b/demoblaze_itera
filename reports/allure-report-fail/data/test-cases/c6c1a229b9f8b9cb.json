{"uid":"c6c1a229b9f8b9cb","name":"test_04_select_products_add_to_cart","fullName":"main.TestDemoBlazer#test_04_select_products_add_to_cart","historyId":"2816420a7f04774e4b5bd4e0673c8f35","time":{"start":1664491619554,"stop":1664491651985,"duration":32431},"description":"\n        Select multiple products from different categories\n        and add them to a wishing list cart.\n        ","descriptionHtml":"<pre><code>    Select multiple products from different categories\n    and add them to a wishing list cart.\n</code></pre>\n","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5561c5432343 <unknown>\n#1 0x5561c523c54a <unknown>\n#2 0x5561c5275695 <unknown>\n#3 0x5561c5275871 <unknown>\n#4 0x5561c52ada24 <unknown>\n#5 0x5561c5293c7d <unknown>\n#6 0x5561c52ab760 <unknown>\n#7 0x5561c5293a73 <unknown>\n#8 0x5561c52684f3 <unknown>\n#9 0x5561c5269731 <unknown>\n#10 0x5561c548062e <unknown>\n#11 0x5561c5483ac2 <unknown>\n#12 0x5561c5466f4e <unknown>\n#13 0x5561c5484743 <unknown>\n#14 0x5561c545b36f <unknown>\n#15 0x5561c54a4a28 <unknown>\n#16 0x5561c54a4ba6 <unknown>\n#17 0x5561c54bed52 <unknown>\n#18 0x7f2036c91450 <unknown>","statusTrace":"self = <main.TestDemoBlazer object at 0x7f9346266bb0>\n\n    @allure.step(\"Select products and add to cart\")\n    def test_04_select_products_add_to_cart(self):\n        \"\"\"\n        Select multiple products from different categories\n        and add them to a wishing list cart.\n        \"\"\"\n        if not self.logged_in:\n            raise EnvironmentError(\"Client is not logged in.\")\n        try:\n            for category in self.categories:\n                # start always at Home screen.\n                self.driver_wait.until(Ec.element_to_be_clickable(\n                    (By.XPATH, \"(//a[@class='nav-link'])[1]\")\n                )).click()\n                # Open product category\n>               self.driver_wait.until(Ec.element_to_be_clickable(\n                    (By.XPATH, f\"//a[normalize-space()='{category}'][1]\")\n                )).click()\n\nmain.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f578ea3cadb5ea1ed841278153abc227\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x7f9346265d30>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5561c5432343 <unknown>\nE       #1 0x5561c523c54a <unknown>\nE       #2 0x5561c5275695 <unknown>\nE       #3 0x5561c5275871 <unknown>\nE       #4 0x5561c52ada24 <unknown>\nE       #5 0x5561c5293c7d <unknown>\nE       #6 0x5561c52ab760 <unknown>\nE       #7 0x5561c5293a73 <unknown>\nE       #8 0x5561c52684f3 <unknown>\nE       #9 0x5561c5269731 <unknown>\nE       #10 0x5561c548062e <unknown>\nE       #11 0x5561c5483ac2 <unknown>\nE       #12 0x5561c5466f4e <unknown>\nE       #13 0x5561c5484743 <unknown>\nE       #14 0x5561c545b36f <unknown>\nE       #15 0x5561c54a4a28 <unknown>\nE       #16 0x5561c54a4ba6 <unknown>\nE       #17 0x5561c54bed52 <unknown>\nE       #18 0x7f2036c91450 <unknown>\n\n../../testcode/testcode/demo_itera/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:90: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_class_fixture_TestDemoBlazer","time":{"start":1664491613849,"stop":1664491614535,"duration":686},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"description":"\n        Select multiple products from different categories\n        and add them to a wishing list cart.\n        ","status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5561c5432343 <unknown>\n#1 0x5561c523c54a <unknown>\n#2 0x5561c5275695 <unknown>\n#3 0x5561c5275871 <unknown>\n#4 0x5561c52ada24 <unknown>\n#5 0x5561c5293c7d <unknown>\n#6 0x5561c52ab760 <unknown>\n#7 0x5561c5293a73 <unknown>\n#8 0x5561c52684f3 <unknown>\n#9 0x5561c5269731 <unknown>\n#10 0x5561c548062e <unknown>\n#11 0x5561c5483ac2 <unknown>\n#12 0x5561c5466f4e <unknown>\n#13 0x5561c5484743 <unknown>\n#14 0x5561c545b36f <unknown>\n#15 0x5561c54a4a28 <unknown>\n#16 0x5561c54a4ba6 <unknown>\n#17 0x5561c54bed52 <unknown>\n#18 0x7f2036c91450 <unknown>","statusTrace":"self = <main.TestDemoBlazer object at 0x7f9346266bb0>\n\n    @allure.step(\"Select products and add to cart\")\n    def test_04_select_products_add_to_cart(self):\n        \"\"\"\n        Select multiple products from different categories\n        and add them to a wishing list cart.\n        \"\"\"\n        if not self.logged_in:\n            raise EnvironmentError(\"Client is not logged in.\")\n        try:\n            for category in self.categories:\n                # start always at Home screen.\n                self.driver_wait.until(Ec.element_to_be_clickable(\n                    (By.XPATH, \"(//a[@class='nav-link'])[1]\")\n                )).click()\n                # Open product category\n>               self.driver_wait.until(Ec.element_to_be_clickable(\n                    (By.XPATH, f\"//a[normalize-space()='{category}'][1]\")\n                )).click()\n\nmain.py:143: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"f578ea3cadb5ea1ed841278153abc227\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x7f9346265d30>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x5561c5432343 <unknown>\nE       #1 0x5561c523c54a <unknown>\nE       #2 0x5561c5275695 <unknown>\nE       #3 0x5561c5275871 <unknown>\nE       #4 0x5561c52ada24 <unknown>\nE       #5 0x5561c5293c7d <unknown>\nE       #6 0x5561c52ab760 <unknown>\nE       #7 0x5561c5293a73 <unknown>\nE       #8 0x5561c52684f3 <unknown>\nE       #9 0x5561c5269731 <unknown>\nE       #10 0x5561c548062e <unknown>\nE       #11 0x5561c5483ac2 <unknown>\nE       #12 0x5561c5466f4e <unknown>\nE       #13 0x5561c5484743 <unknown>\nE       #14 0x5561c545b36f <unknown>\nE       #15 0x5561c54a4a28 <unknown>\nE       #16 0x5561c54a4ba6 <unknown>\nE       #17 0x5561c54bed52 <unknown>\nE       #18 0x7f2036c91450 <unknown>\n\n../../testcode/testcode/demo_itera/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:90: TimeoutException","steps":[{"name":"Select products and add to cart","time":{"start":1664491619554,"stop":1664491651984,"duration":32430},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5561c5432343 <unknown>\n#1 0x5561c523c54a <unknown>\n#2 0x5561c5275695 <unknown>\n#3 0x5561c5275871 <unknown>\n#4 0x5561c52ada24 <unknown>\n#5 0x5561c5293c7d <unknown>\n#6 0x5561c52ab760 <unknown>\n#7 0x5561c5293a73 <unknown>\n#8 0x5561c52684f3 <unknown>\n#9 0x5561c5269731 <unknown>\n#10 0x5561c548062e <unknown>\n#11 0x5561c5483ac2 <unknown>\n#12 0x5561c5466f4e <unknown>\n#13 0x5561c5484743 <unknown>\n#14 0x5561c545b36f <unknown>\n#15 0x5561c54a4a28 <unknown>\n#16 0x5561c54a4ba6 <unknown>\n#17 0x5561c54bed52 <unknown>\n#18 0x7f2036c91450 <unknown>\n\n","statusTrace":"  File \"/home/mbadwieh/PycharmProjects/testcode/testcode/demo_itera/lib/python3.9/site-packages/allure_commons/_allure.py\", line 172, in impl\n    return func(*a, **kw)\n  File \"/home/mbadwieh/PycharmProjects/pythonProject/demo_itera/main.py\", line 143, in test_04_select_products_add_to_cart\n    self.driver_wait.until(Ec.element_to_be_clickable(\n  File \"/home/mbadwieh/PycharmProjects/testcode/testcode/demo_itera/lib/python3.9/site-packages/selenium/webdriver/support/wait.py\", line 90, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"Add products from category to cart","time":{"start":1664491622062,"stop":1664491629836,"duration":7774},"status":"passed","steps":[{"name":"Check alert and accept it","time":{"start":1664491624143,"stop":1664491625156,"duration":1013},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"alert_text","value":"'added'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check alert and accept it","time":{"start":1664491628018,"stop":1664491628533,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"alert_text","value":"'added'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"category","value":"'Phones'"},{"name":"products","value":"['Samsung galaxy s6', 'Nokia lumia 1520']"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Add products from category to cart","time":{"start":1664491632066,"stop":1664491640592,"duration":8526},"status":"passed","steps":[{"name":"Check alert and accept it","time":{"start":1664491634077,"stop":1664491635093,"duration":1016},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"alert_text","value":"'added'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true},{"name":"Check alert and accept it","time":{"start":1664491638738,"stop":1664491639254,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"alert_text","value":"'added'"}],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[],"parameters":[{"name":"category","value":"'Laptops'"},{"name":"products","value":"['Sony vaio i5', 'Sony vaio i7']"}],"stepsCount":2,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":true}],"attachments":[{"uid":"a8c1151e6d13664f","name":"select_products.png","source":"a8c1151e6d13664f.png","type":"image/png","size":632767}],"parameters":[],"stepsCount":6,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":7,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"_xunit_setup_class_fixture_TestDemoBlazer::0","time":{"start":1664491655370,"stop":1664491655430,"duration":60},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"suite","value":"main"},{"name":"subSuite","value":"TestDemoBlazer"},{"name":"host","value":"mohammad-ThinkPad-Ubuntu"},{"name":"thread","value":"58848-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"main"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c6c1a229b9f8b9cb.json","parameterValues":[]}